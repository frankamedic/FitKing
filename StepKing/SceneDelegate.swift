import SwiftUI
import UIKit
import BackgroundTasks

/**
 SceneDelegate manages the UI lifecycle in iOS 13+ multi-window environment.
 
 Key responsibilities:
 - Handles scene-based lifecycle events (foreground, background, disconnect)
 - Manages UI state transitions
 - Creates and configures the app's window and initial view controller
 
 Note: This file is automatically integrated with iOS when specified in Info.plist
 under the "Application Scene Manifest" key (auto-generated by our build settings).
 */
final class SceneDelegate: NSObject, UIWindowSceneDelegate {
    var window: UIWindow?
    
    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {
        print("ðŸŽ¬ Scene connecting")
    }
    
    func sceneDidDisconnect(_ scene: UIScene) {
        print("ðŸ”Œ Scene disconnecting - checking background tasks")
        
        // Ensure we have a background refresh scheduled before disconnecting
        BGTaskScheduler.shared.getPendingTaskRequests { tasks in
            print("ðŸ“‹ Pending tasks at disconnect: \(tasks.count)")
            if tasks.isEmpty {
                // Schedule one last refresh before disconnection
                NotificationManager.shared.scheduleBackgroundRefresh()
            }
        }
    }
    
    func sceneDidBecomeActive(_ scene: UIScene) {
        print("ðŸŽ­ Scene became active")
    }
    
    func sceneWillResignActive(_ scene: UIScene) {
        print("ðŸŽ­ Scene will resign active")
    }
    
    func sceneDidEnterBackground(_ scene: UIScene) {
        print("ðŸŽ­ Scene entered background")
    }
    
    func sceneWillEnterForeground(_ scene: UIScene) {
        print("ðŸŽ­ Scene will enter foreground")
    }
} 